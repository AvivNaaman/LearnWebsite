@model LearnWebsite.Web.Models.Entities.CoursePage

@{
    ViewData["Title"] = "Create";
    Layout = "_AdminLayout";
}

<h1>Create</h1>

<h4>CoursePage</h4>
<hr />
<div class="row">
    <div class="col-md-11">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group col-md-5">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group col-md-5">
                <label asp-for="UrlName" class="control-label"></label>
                <input asp-for="UrlName" class="form-control" />
                <span asp-validation-for="UrlName" class="text-danger"></span>
            </div>
            <div class="form-group col-md-5">
                <label class="control-label"></label>
                <select id="selectCourse" class="form-control" asp-items="ViewBag.Courses"></select>
                <span class="text-danger"></span>
            </div>
            @* Unit selection, powered by ajax (see below in Scripts section). Items provided by query string if sent (see controller) *@
            <div class="form-group col-md-5">
                <label asp-for="UnitId" class="control-label"></label>
                <select asp-for="UnitId" class="form-control" asp-items="ViewBag.Units"><option value="" selected disabled></option></select>
                <span asp-validation-for="UnitId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HtmlContent" class="control-label"></label>
                <textarea asp-for="HtmlContent" class="form-control" id="pageContentTextArea"></textarea>
                <span asp-validation-for="HtmlContent" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_TinyMCEScriptsPartial");}
    <script>
        $("#pageContentTextArea").tinymce({
            height: 500,
            plugins: 'print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons',
            menubar: 'file edit view insert format tools table help',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',
            toolbar_sticky: true,
            height: 600,
            image_caption: true,
            toolbar_mode: 'sliding',
        });
        @* On course selection, fetch units and put in unit selection: *@
        $("#selectCourse").on('change', function (e) {
            $.ajax('@Url.Action("GetUnitsAsJson", "Units", new { area = "Admin" })' + `?&courseId=${$('#selectCourse').find(':selected').val()}`, {})
                .done(function (data) {
                    console.log(data);
                    $.each(data, function (i, val) {
                        log(val);
                        $("#selectUnit").append($('<option/>', {
                            value: val.id,
                            text: val.displayName
                        }));
                    });
                })
        });
    </script>
}
